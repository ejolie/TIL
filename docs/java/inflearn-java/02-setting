# 2강. Java 프로그램의 실행 구조

## 2-1. 환경변수 설정

- `java.exe` : JVM 구동 명령
- `javac.exe` : 컴파일러

`javac.exe`, `java.exe`를 다른 디렉토리에서도 실행할 수 있도록 하기 위해 환경 변수(Path)에 `bin` 경로를 등록한다. 



## 2-2. Java 컴파일러와 JVM

### Java 소스 작성부터 프로그램 실행까지의 순서

1. Java 소스 (`HelloWorld.java`)

   **-> Java 컴파일러 (`javac.exe`)**

2. 바이트 코드 파일 (`HelloWorld.class`)

   **-> JVM 구동 (`java.exe`)**

   **[Link] 메모리 로딩 / 실행 준비 / 실행 결정 / 초기화**

3. 기계어

4. 실행



이 과정을 다 할 수 있는 것이 이클립스. But 개발자가 직접 해봐야 원리를 알 수 있다.



## 2-3. Java 프로그램의 실행

### 컴파일

```bash
javac.exe HelloWorld.java
```



### 실행

```bash
java HelloWorld
```



## 2-4. 이클립스 사용의 장점

이클립스를 사용하면 컴파일, 디버깅 그리고 실행까지 쉽게 할 수 있다.



## 2-5. 가비지 컬렉터(Garbage Collector)

프로그램 실행에 필요한 메모리를 Garbage Collector가 자동으로 관리한다.

### C계열 프로그램

- 개발자가 직접 메모리를 관리해야 함.
- 만약 메모리 관리를 잘못한 경우 메모리 누수가 발생하고 타 프로그램 동작이 멈출 수 있음.



### Java 프로그램

- 개발자가 메모리에 접근할 수 없음.
- 따라서 개발자는 메모리 관리를 할 수 없고, 가비지 컬렉터가 불필요한 메로리를 회수해서 메모리를 최적화 함.



